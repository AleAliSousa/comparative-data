# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_tsv %in% genus_terms_traits)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_tsv %in% genus_terms_traits]), "\n")
# "Species" column exists in i 1:5
i <- 5  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i 1:5
i <- 4  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i 1:5
i <- 7  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 7
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(traits_data$species_sci, tsv_data_list[[i]]$Species)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(tsv_data_list[[i]]$Species[match(traits_data$species_sci, tsv_data_list[[i]]$Species)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(tsv_data_list[[i]]$Species[match(traits_data$species_sci, tsv_data_list[[i]]$Species)])), ". This is the list matched at the level of subspecies:", na.omit(tsv_data_list[[i]]$Species[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 7 (DUPLICATES -- CANNOT HAVE A BACKWARDS MATCH)
i <- 7  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(tsv_data_list[[i]]$Species[match(traits_data$species_sci, tsv_data_list[[i]]$Species)])), ". This is the list matched at the level of subspecies:", na.omit(tsv_data_list[[i]]$Species[match(traits_data$species_sci, tsv_data_list[[i]]$Species)]))
# "Genus species" column in i <- 8
i <- 8  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Genus species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Genus species' exists:", "Genus species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$"Genus species", traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$"Genus species", traits_data$species_sci)]))
View(Isler_etal_2008_TableS3)
# "Species" column exists in i 7 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 8  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Genus species" column in i <- 8
i <- 8  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$"Genus species" and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$"Genus species")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Genus species" column in i <- 8
i <- 8  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$"Genus species" and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$"Genus species")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Genus species' exists:", "Genus species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Genus species" column in i <- 8
i <- 8  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Genus species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Genus species' exists:", "Genus species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$"Genus species", traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$"Genus species", traits_data$species_sci)]))
View(Isler_etal_2008_TableS3)
# "Species" column exists in i <- 9 BUT replace underscores "_" with spaces when performing the match
i <- 9  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Genus species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("_.*", "", tsv_data_list[[i]]$"Genus species")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Genus species' exists:", "Genus species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 9 BUT replace underscores "_" with spaces when performing the match
i <- 9  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Genus species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("_.*", "", tsv_data_list[[i]]$"Genus species")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 9 BUT replace underscores "_" with spaces when performing the match
i <- 9  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Genus species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("_.*", "", tsv_data_list[[i]]$"Species")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i 10 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 10  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i 10 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 11  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Binomial" column exists in i <- 12 AND BUT replace underscores "_" with spaces when performing the match
i <- 12  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$"Binomial" and traits_data$species_sci
genus_terms_tsv <- gsub("_.*", "", tsv_data_list[[i]]$"Binomial")
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Binomial' exists:", "Binomial" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 13 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 13  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 13 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 14  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
View(Mota_etal_2015_TableS1)
# "Species" column exists in i <- 13 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 15  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# Individual values in i <- 16 (DO LATER)
i <- 17  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 18 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 18  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 19  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 20  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 21  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 22  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 23  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 18:23
i <- 23  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species", and the number of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(tsv_data_list[[i]]$Species, traits_data$species_sci)]))
# "Species" column exists in i <- 24:25 BUT replace underscores "_" with spaces and replace "*" with "" when performing the match
i <- 9  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("*", "",gsub("_.*", "", tsv_data_list[[i]]$"Species"))
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 24:25 BUT replace underscores "_" with spaces and replace "*" with "" when performing the match
i <- 24  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("*", "",gsub("_.*", "", tsv_data_list[[i]]$"Species"))
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 24:25 BUT replace underscores "_" with spaces and replace "*" with "" when performing the match
i <- 25  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("*", "",gsub("_.*", "", tsv_data_list[[i]]$"Species"))
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
View(Lewitus_etal_2014_TableS8)
# "Species" column exists in i <- 24 BUT replace underscores "_" with spaces and replace "*" with "" when performing the match
i <- 24  # Change this to the desired index
# Extract the first term before the UNDERSCORE in tsv_data_list[[i]]$"Species" and the first term before the space in traits_data$species_sci
genus_terms_tsv <- gsub("*", "",gsub("_.*", "", tsv_data_list[[i]]$"Species"))
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 25 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 25  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 25
i <- 25  # Change this to the desired index
# Print a summary stating the dataframe name, the existence of a column "Species",
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and the number of matched values at the level of subspecies is:", sum(!is.na(traits_data$species_sci[match(gsub("*", "", gsub("_", " ", tsv_data_list[[i]]$Species)), traits_data$species_sci)])), ". This is the list matched at the level of subspecies:", na.omit(traits_data$species_sci[match(gsub("_", " ", tsv_data_list[[i]]$Species), traits_data$species_sci)]))
# "Species" column exists in i <- 25:26 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 26  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 30:33 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 30  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 30:33 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 31  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 30:33 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 32  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 30:33 (CORRECTED FOR BACKWARDS MATCH FROM HERE ON)
i <- 33  # Change this to the desired index
# Extract the first term before the space in tsv_data_list[[i]]$Species and traits_data$species_sci
genus_terms_tsv <- gsub(" .*", "", tsv_data_list[[i]]$Species)
genus_terms_traits <- gsub(" .*", "", traits_data$species_sci)
# Check if there are any matches at the Genus level
has_genus_matches <- any(genus_terms_traits %in% genus_terms_tsv)
# Get the number of matched values at the Genus level
num_genus_matches <- sum(genus_terms_traits %in% genus_terms_tsv)
# Print the result with the list of matched values
cat("For", names(tsv_data_list)[i], ", a column called 'Species' exists:", "Species" %in% colnames(tsv_data_list[[i]]), "and there are", num_genus_matches, "matches at the Genus level:", has_genus_matches, ". This is the list matched at the level of genus:", toString(genus_terms_traits[genus_terms_traits %in% genus_terms_tsv]), "\n")
# "Species" column exists in i <- 1:5
i <- 5  # Change this to the desired index
# Step 1: Check if a column called 'Species' exists
species_column_exists <- "Species" %in% colnames(tsv_data_list[[i]])
print(paste("Step 1: For", names(tsv_data_list)[i], ", a column called 'Species' exists:", species_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
species_column <- gsub("_", " ", tsv_data_list[[i]]$Species)
print(paste("Step 2: Extracted 'Species' column with any underscores replaced with spaces:", species_column))
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
print(paste("Step 3: Matched 'Species' column with traits_data$species_sci:", matched_indices))
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print(paste("Step 5: List matched at the level of subspecies:", matched_values))
# "Species" column exists in i <- 1:5
i <- 5  # Change this to the desired index
# Step 1: Check if a column called 'Species' exists
species_column_exists <- "Species" %in% colnames(tsv_data_list[[i]])
print(paste("Step 1: For", names(tsv_data_list)[i], ", a column called 'Species' exists:", species_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
species_column <- gsub("_", " ", tsv_data_list[[i]]$Species)
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print(paste("Step 5: List matched at the level of subspecies:", matched_values))
# "Species" column exists in i <- 1:5
i <- 5  # Change this to the desired index
# Step 1: Get dataframe name
i
names(tsv_data_list)[i]
# Step 1: Check if a column called 'Species' exists
species_column_exists <- "Species" %in% colnames(tsv_data_list[[i]])
print(paste("Step 1: For", names(tsv_data_list)[i], ", a column called 'Species' exists:", species_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
species_column <- gsub("_", " ", tsv_data_list[[i]]$Species)
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print(paste("Step 5: List matched at the level of subspecies:", matched_values))
# "Species" column exists in i <- 1:5
i <- 5  # Change this to the desired index
# Step 1: Check if a column called 'Species' exists
species_column_exists <- "Species" %in% colnames(tsv_data_list[[i]])
print(paste("Step 1: For i=", i, names(tsv_data_list)[i], ", a column called 'Species' exists:", species_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
species_column <- gsub("_", " ", tsv_data_list[[i]]$Species)
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print(paste("Step 5: List matched at the level of subspecies:", matched_values))
# Assuming tsv_data_list[[5]] is the fifth dataframe in the list
i <- 5  # Change this to the desired index
# Step 1: Identify relevant columns in the current dataframe
relevant_columns <- colnames(tsv_data_list[[i]]) %>%
tolower() %>%
grep("species|genus species|binomial", ignore.case = TRUE, value = TRUE)
# Check if any relevant columns exist
relevant_column_exists <- length(relevant_columns) > 0
print(paste("Step 1: For", names(tsv_data_list)[i], ", relevant columns including terms 'Species,' 'Genus species,' 'Binomial' exist:", relevant_column_exists))
# # Step 1: Check if a column called 'Species' exists
# species_column_exists <- "Species" %in% colnames(tsv_data_list[[i]])
# print(paste("Step 1: For i=", i, names(tsv_data_list)[i], ", a column called 'Species' exists:", species_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
relevant_columns <- gsub("_", " ", tsv_data_list[[i]]$Species)
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print(paste("Step 5: List matched at the level of subspecies:", matched_values))
# Assuming tsv_data_list[[5]] is the fifth dataframe in the list
i <- 5  # Change this to the desired index
# Step 1: Identify relevant columns in the current dataframe
relevant_columns <- colnames(tsv_data_list[[i]]) %>%
tolower() %>%
grep("species|genus species|binomial", ignore.case = TRUE, value = TRUE)
# Check if any relevant columns exist
relevant_column_exists <- length(relevant_columns) > 0
print(paste("Step 1: For", names(tsv_data_list)[i], ", relevant columns including terms 'Species,' 'Genus species,' 'Binomial' exist:", relevant_column_exists))
# Step 2: Extract 'Species' column and replace underscores (if present) with spaces
relevant_columns <- gsub("_", " ", tsv_data_list[[i]]$Species)
# Step 3: Match 'Species' column with traits_data$species_sci
matched_indices <- match(species_column, traits_data$species_sci)
# Step 4: Count the number of matched values at the level of subspecies
num_subspecies_matches <- sum(!is.na(matched_indices))
print(paste("Step 4: Number of matched values at the level of subspecies:", num_subspecies_matches))
# Step 5: Extract the list of matched values
matched_values <- na.omit(traits_data$species_sci[matched_indices])
print("Step 5: List matched at the level of subspecies:", paste(matched_values))
cat("Step 5: List matched at the level of subspecies:", paste(matched_values))
